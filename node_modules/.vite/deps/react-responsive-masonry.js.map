{
  "version": 3,
  "sources": ["../../react-responsive-masonry/es/Masonry/index.js", "../../react-responsive-masonry/es/ResponsiveMasonry/index.js", "../../react-responsive-masonry/es/index.js"],
  "sourcesContent": ["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nvar Masonry = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Masonry, _React$Component);\n\n  function Masonry() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Masonry.prototype;\n\n  _proto.getColumns = function getColumns() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        columnsCount = _this$props.columnsCount;\n    var columns = Array.from({\n      length: columnsCount\n    }, function () {\n      return [];\n    });\n    React.Children.forEach(children, function (child, index) {\n      if (child && React.isValidElement(child)) {\n        columns[index % columnsCount].push(child);\n      }\n    });\n    return columns;\n  };\n\n  _proto.renderColumns = function renderColumns() {\n    var gutter = this.props.gutter;\n    return this.getColumns().map(function (column, i) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          alignContent: \"stretch\",\n          flex: 1,\n          width: 0,\n          gap: gutter\n        }\n      }, column.map(function (item) {\n        return item;\n      }));\n    });\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        gutter = _this$props2.gutter,\n        className = _this$props2.className,\n        style = _this$props2.style;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: _extends({\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignContent: \"stretch\",\n        boxSizing: \"border-box\",\n        width: \"100%\",\n        gap: gutter\n      }, style),\n      className: className\n    }, this.renderColumns());\n  };\n\n  return Masonry;\n}(React.Component);\n\nMasonry.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  columnsCount: PropTypes.number,\n  gutter: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object\n} : {};\nMasonry.defaultProps = {\n  columnsCount: 3,\n  gutter: \"0\",\n  className: null,\n  style: {}\n};\nexport default Masonry;", "import PropTypes from \"prop-types\";\nimport React, { useCallback, useLayoutEffect, useEffect, useMemo, useState } from \"react\";\nvar DEFAULT_COLUMNS_COUNT = 1;\nvar useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nvar useHasMounted = function useHasMounted() {\n  var _useState = useState(false),\n      hasMounted = _useState[0],\n      setHasMounted = _useState[1];\n\n  useIsomorphicLayoutEffect(function () {\n    setHasMounted(true);\n  }, []);\n  return hasMounted;\n};\n\nvar useWindowWidth = function useWindowWidth() {\n  var hasMounted = useHasMounted();\n\n  var _useState2 = useState(0),\n      width = _useState2[0],\n      setWidth = _useState2[1];\n\n  var handleResize = useCallback(function () {\n    if (!hasMounted) return;\n    setWidth(window.innerWidth);\n  }, [hasMounted]);\n  useIsomorphicLayoutEffect(function () {\n    if (hasMounted) {\n      window.addEventListener(\"resize\", handleResize);\n      handleResize();\n      return function () {\n        return window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, [hasMounted, handleResize]);\n  return width;\n};\n\nvar MasonryResponsive = function MasonryResponsive(_ref) {\n  var _ref$columnsCountBrea = _ref.columnsCountBreakPoints,\n      columnsCountBreakPoints = _ref$columnsCountBrea === void 0 ? {\n    350: 1,\n    750: 2,\n    900: 3\n  } : _ref$columnsCountBrea,\n      children = _ref.children,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? null : _ref$className,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? null : _ref$style;\n  var windowWidth = useWindowWidth();\n  var columnsCount = useMemo(function () {\n    var breakPoints = Object.keys(columnsCountBreakPoints).sort(function (a, b) {\n      return a - b;\n    });\n    var count = breakPoints.length > 0 ? columnsCountBreakPoints[breakPoints[0]] : DEFAULT_COLUMNS_COUNT;\n    breakPoints.forEach(function (breakPoint) {\n      if (breakPoint < windowWidth) {\n        count = columnsCountBreakPoints[breakPoint];\n      }\n    });\n    return count;\n  }, [windowWidth, columnsCountBreakPoints]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, React.Children.map(children, function (child, index) {\n    return React.cloneElement(child, {\n      key: index,\n      columnsCount: columnsCount\n    });\n  }));\n};\n\nMasonryResponsive.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  columnsCountBreakPoints: PropTypes.object,\n  className: PropTypes.string,\n  style: PropTypes.object\n} : {};\nexport default MasonryResponsive;", "import Masonry from \"./Masonry\";\nimport ResponsiveMasonry from \"./ResponsiveMasonry\";\nexport default Masonry;\nexport { ResponsiveMasonry };"],
  "mappings": ";;;;;;;;;;;AAMA,wBAAsB;AACtB,mBAAkB;AAPlB,SAAS,WAAW;AAAE,aAAW,OAAO,UAAU,SAAU,QAAQ;AAAE,aAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,UAAI,SAAS,UAAU,CAAC;AAAG,eAAS,OAAO,QAAQ;AAAE,YAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,GAAG;AAAE,iBAAO,GAAG,IAAI,OAAO,GAAG;AAAA,QAAG;AAAA,MAAE;AAAA,IAAE;AAAE,WAAO;AAAA,EAAQ;AAAG,SAAO,SAAS,MAAM,MAAM,SAAS;AAAG;AAE5T,SAAS,eAAe,UAAU,YAAY;AAAE,WAAS,YAAY,OAAO,OAAO,WAAW,SAAS;AAAG,WAAS,UAAU,cAAc;AAAU,kBAAgB,UAAU,UAAU;AAAG;AAE5L,SAAS,gBAAgB,GAAG,GAAG;AAAE,oBAAkB,OAAO,kBAAkB,SAASA,iBAAgBC,IAAGC,IAAG;AAAE,IAAAD,GAAE,YAAYC;AAAG,WAAOD;AAAA,EAAG;AAAG,SAAO,gBAAgB,GAAG,CAAC;AAAG;AAKzK,IAAI,UAAuB,SAAU,kBAAkB;AACrD,iBAAeE,UAAS,gBAAgB;AAExC,WAASA,WAAU;AACjB,WAAO,iBAAiB,MAAM,MAAM,SAAS,KAAK;AAAA,EACpD;AAEA,MAAI,SAASA,SAAQ;AAErB,SAAO,aAAa,SAAS,aAAa;AACxC,QAAI,cAAc,KAAK,OACnB,WAAW,YAAY,UACvB,eAAe,YAAY;AAC/B,QAAI,UAAU,MAAM,KAAK;AAAA,MACvB,QAAQ;AAAA,IACV,GAAG,WAAY;AACb,aAAO,CAAC;AAAA,IACV,CAAC;AACD,iBAAAC,QAAM,SAAS,QAAQ,UAAU,SAAU,OAAO,OAAO;AACvD,UAAI,SAAS,aAAAA,QAAM,eAAe,KAAK,GAAG;AACxC,gBAAQ,QAAQ,YAAY,EAAE,KAAK,KAAK;AAAA,MAC1C;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT;AAEA,SAAO,gBAAgB,SAAS,gBAAgB;AAC9C,QAAI,SAAS,KAAK,MAAM;AACxB,WAAO,KAAK,WAAW,EAAE,IAAI,SAAU,QAAQ,GAAG;AAChD,aAAoB,aAAAA,QAAM,cAAc,OAAO;AAAA,QAC7C,KAAK;AAAA,QACL,OAAO;AAAA,UACL,SAAS;AAAA,UACT,eAAe;AAAA,UACf,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,MAAM;AAAA,UACN,OAAO;AAAA,UACP,KAAK;AAAA,QACP;AAAA,MACF,GAAG,OAAO,IAAI,SAAU,MAAM;AAC5B,eAAO;AAAA,MACT,CAAC,CAAC;AAAA,IACJ,CAAC;AAAA,EACH;AAEA,SAAO,SAAS,SAAS,SAAS;AAChC,QAAI,eAAe,KAAK,OACpB,SAAS,aAAa,QACtB,YAAY,aAAa,WACzB,QAAQ,aAAa;AACzB,WAAoB,aAAAA,QAAM,cAAc,OAAO;AAAA,MAC7C,OAAO,SAAS;AAAA,QACd,SAAS;AAAA,QACT,eAAe;AAAA,QACf,gBAAgB;AAAA,QAChB,cAAc;AAAA,QACd,WAAW;AAAA,QACX,OAAO;AAAA,QACP,KAAK;AAAA,MACP,GAAG,KAAK;AAAA,MACR;AAAA,IACF,GAAG,KAAK,cAAc,CAAC;AAAA,EACzB;AAEA,SAAOD;AACT,EAAE,aAAAC,QAAM,SAAS;AAEjB,QAAQ,YAAY,OAAwC;AAAA,EAC1D,UAAU,kBAAAC,QAAU,UAAU,CAAC,kBAAAA,QAAU,QAAQ,kBAAAA,QAAU,IAAI,GAAG,kBAAAA,QAAU,IAAI,CAAC,EAAE;AAAA,EACnF,cAAc,kBAAAA,QAAU;AAAA,EACxB,QAAQ,kBAAAA,QAAU;AAAA,EAClB,WAAW,kBAAAA,QAAU;AAAA,EACrB,OAAO,kBAAAA,QAAU;AACnB,IAAI,CAAC;AACL,QAAQ,eAAe;AAAA,EACrB,cAAc;AAAA,EACd,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,OAAO,CAAC;AACV;AACA,IAAO,kBAAQ;;;AC1Ff,IAAAC,qBAAsB;AACtB,IAAAC,gBAAkF;AAClF,IAAI,wBAAwB;AAC5B,IAAI,4BAA4B,OAAO,WAAW,cAAc,gCAAkB;AAElF,IAAI,gBAAgB,SAASC,iBAAgB;AAC3C,MAAI,gBAAY,wBAAS,KAAK,GAC1B,aAAa,UAAU,CAAC,GACxB,gBAAgB,UAAU,CAAC;AAE/B,4BAA0B,WAAY;AACpC,kBAAc,IAAI;AAAA,EACpB,GAAG,CAAC,CAAC;AACL,SAAO;AACT;AAEA,IAAI,iBAAiB,SAASC,kBAAiB;AAC7C,MAAI,aAAa,cAAc;AAE/B,MAAI,iBAAa,wBAAS,CAAC,GACvB,QAAQ,WAAW,CAAC,GACpB,WAAW,WAAW,CAAC;AAE3B,MAAI,mBAAe,2BAAY,WAAY;AACzC,QAAI,CAAC;AAAY;AACjB,aAAS,OAAO,UAAU;AAAA,EAC5B,GAAG,CAAC,UAAU,CAAC;AACf,4BAA0B,WAAY;AACpC,QAAI,YAAY;AACd,aAAO,iBAAiB,UAAU,YAAY;AAC9C,mBAAa;AACb,aAAO,WAAY;AACjB,eAAO,OAAO,oBAAoB,UAAU,YAAY;AAAA,MAC1D;AAAA,IACF;AAAA,EACF,GAAG,CAAC,YAAY,YAAY,CAAC;AAC7B,SAAO;AACT;AAEA,IAAI,oBAAoB,SAASC,mBAAkB,MAAM;AACvD,MAAI,wBAAwB,KAAK,yBAC7B,0BAA0B,0BAA0B,SAAS;AAAA,IAC/D,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,EACP,IAAI,uBACA,WAAW,KAAK,UAChB,iBAAiB,KAAK,WACtB,YAAY,mBAAmB,SAAS,OAAO,gBAC/C,aAAa,KAAK,OAClB,QAAQ,eAAe,SAAS,OAAO;AAC3C,MAAI,cAAc,eAAe;AACjC,MAAI,mBAAe,uBAAQ,WAAY;AACrC,QAAI,cAAc,OAAO,KAAK,uBAAuB,EAAE,KAAK,SAAU,GAAG,GAAG;AAC1E,aAAO,IAAI;AAAA,IACb,CAAC;AACD,QAAI,QAAQ,YAAY,SAAS,IAAI,wBAAwB,YAAY,CAAC,CAAC,IAAI;AAC/E,gBAAY,QAAQ,SAAU,YAAY;AACxC,UAAI,aAAa,aAAa;AAC5B,gBAAQ,wBAAwB,UAAU;AAAA,MAC5C;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT,GAAG,CAAC,aAAa,uBAAuB,CAAC;AACzC,SAAoB,cAAAC,QAAM,cAAc,OAAO;AAAA,IAC7C;AAAA,IACA;AAAA,EACF,GAAG,cAAAA,QAAM,SAAS,IAAI,UAAU,SAAU,OAAO,OAAO;AACtD,WAAO,cAAAA,QAAM,aAAa,OAAO;AAAA,MAC/B,KAAK;AAAA,MACL;AAAA,IACF,CAAC;AAAA,EACH,CAAC,CAAC;AACJ;AAEA,kBAAkB,YAAY,OAAwC;AAAA,EACpE,UAAU,mBAAAC,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,IAAI,GAAG,mBAAAA,QAAU,IAAI,CAAC,EAAE;AAAA,EACnF,yBAAyB,mBAAAA,QAAU;AAAA,EACnC,WAAW,mBAAAA,QAAU;AAAA,EACrB,OAAO,mBAAAA,QAAU;AACnB,IAAI,CAAC;AACL,IAAO,4BAAQ;;;AC/Ef,IAAO,aAAQ;",
  "names": ["_setPrototypeOf", "o", "p", "Masonry", "React", "PropTypes", "import_prop_types", "import_react", "useHasMounted", "useWindowWidth", "MasonryResponsive", "React", "PropTypes"]
}
